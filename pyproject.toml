[tool.poetry]
name = "podkernel"
version = "0.9"
description = "Podman Jupyter Kernel Manager"
authors = [
    "Will Rouesnel <wrouesnel@wrouesnel.com>"
]
license = "MIT"
readme = "README.md"
packages = [
    { include = "podkernel" },
]

classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: BSD",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
]

[tool.poetry.scripts]
podkernel = "podkernel.cli:main"

[tool.poetry.dependencies]
python = ">=3.10"
podman = "^5.0.0"
click = "^8.1.7"
structlog = "^24.4.0"
pydantic = "^2.8.2"
colorama = "^0.4.6"

[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
isort = "^5.13.2"
mypy = "^1.11.1"
pytest = "^8.3.2"
refurb = "^2.0.0"
pytest-cov = "^5.0.0"

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | \venv
    | _build
    | buck-out
    | build
    | dist
    | setup\.py
  )/
)

'''

[tool.isort]
profile = "black"
indent = "    "
force_sort_within_sections = true
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"
known_first_party = []
forced_separate = "tests"
combine_as_imports = true

[tool.mypy]
pretty = true
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--doctest-modules"
console_output_style = "count"
timeout = "9"
testpaths = ["tests"]

[tool.refurb]
ignore = ["FURB184", "FURB103"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
